{{ define "base" }}
<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="/static/favicon.ico" rel="icon" type="image/x-icon">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <title>
    {{ block "title" .}}

    {{end}}
    </title>

    {{ block "css" . }}

    {{ end}}

  </head>
  <body>

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">&nbsp;</a>
      <button class="navbar-toggler" type="button"
              data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
              aria-controls="navbarSupportedContent" aria-expanded="false"
              aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/">Home</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown"
               role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Products
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
              <li><a class="dropdown-item" href="/widget/1">Buy one widget</a></li>
              <li><a class="dropdown-item" href="/plans/bronze">Subscription</a></li>
            </ul>
          </li>
          {{ if .IsAuthenticated }}
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="adminDropdown"
               role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Admin
            </a>
            <ul class="dropdown-menu" aria-labelledby="adminDropdown">
              <li><a class="dropdown-item" href="/admin/virtual-terminal">Virtual Terminal</a></li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item" href="/admin/all-sales">All Sales</a></li>
              <li><a class="dropdown-item" href="/admin/all-subscriptions">All Subscriptions</a></li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item" href="/admin/all-users">All Users</a></li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item" href="/admin/user/new">Create New User</a></li>
            </ul>
          </li>
          {{ end }}
        </ul>
        <ul class="navbar-nav mb-auto mb-2 mb-lg-0">
          {{ if .IsAuthenticated }}
            <li class="mt-2 me-3">Welcome, {{ .User.FirstName }} {{ .User.LastName }}</li>
            <li><a  class="nav-link" href="/logout">Logout</a></li>
          {{ else }}
            <li><a  class="nav-link" href="/login">Login</a></li>
          {{end}}

        </ul>
      </div>
    </div>
  </nav>
  <div class="alert alert-danger text-center mx-5 d-none" id="card-messages"></div>
  <div class="container">
    <div class="row">
      <div class="col">
      {{ block "content" . }}

      {{ end }}
      </div>
    </div>
  </div>


  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
  <script>

    // window.addEventListener('load', (event) => {
    //   updateMenusOnLoad();
    // });
    //
    // function updateMenusOnLoad() {
    //   const loginItem = document.getElementById("login-logout");
    //   const vTerm = document.getElementById("vt-term")
    //   const data = getTokenData();
    //   if (data === null) {
    //     loginItem.href = "/login";
    //     loginItem.innerText = "Login";
    //     if (!vTerm.classList.contains("d-none")) {
    //       vTerm.classList.add("d-none");
    //     }
    //   } else {
    //     loginItem.href = "javascript:logoutUser()";
    //     loginItem.innerText = "Logout";
    //     if (vTerm.classList.contains("d-none")) {
    //       vTerm.classList.remove("d-none");
    //     }
    //   }
    // }

    function loginUserToSite(auth_obj) {
      localStorage.setItem("token", auth_obj.token);
      localStorage.setItem("expiry", auth_obj.expiry);
    }

    function getTokenData() {
      const token = localStorage.getItem("token");
      const expiry = localStorage.getItem("expiry");
      if (token === null || expiry === null) {
        return null;
      }
      return {
        token, expiry
      };
    }

    function isLoggedIn() {
      return localStorage.getItem("token") !== null;
    }

    async function checkAuth() {
      if (!isLoggedIn()) {
        location.href = "/login";
      }
      else {
        const {token} = getTokenData();
        const headers = new Headers();
        headers.append("Content-Type", "application/json");
        headers.append("Authorization", `Bearer ${token}`);

        const requestOptions = {
          method: "POST",
          headers
        }

        try {
          const resp = await fetch("{{ .API }}/api/is-authenticated", requestOptions);
          const data = await resp.json();
          if (data.authorized !== true) {
            console.log("Not logged in");
          } else {
            console.log("Logged in");
          }
        }
        catch (err) {
          console.log(err);
        }

      }
    }

    function logoutUser() {
      localStorage.removeItem("token");
      localStorage.removeItem("expiry");
      location.href = "/logout";
    }

    function showCardError(msg) {
      const cardMessages = document.getElementById("card-messages");
      cardMessages.classList.add("alert-danger");
      cardMessages.classList.remove("alert-success");
      cardMessages.classList.remove("d-none");
      cardMessages.innerText = msg;
    }

    function showCardSuccess() {
      const cardMessages = document.getElementById("card-messages");
      cardMessages.classList.remove("alert-danger");
      cardMessages.classList.add("alert-success");
      cardMessages.classList.remove("d-none");
      cardMessages.innerText = "Transaction successful";
    }


    function formatAsCurrency(amount, locale, currency) {
      const units = parseFloat(amount / 100)
      locale = locale ? locale : "en-CA";
      currency = currency ? currency : "CAD";
      const options = {
        style: 'currency',
        currency
      }
      return units.toLocaleString(locale, options);
    }

  </script>

  {{ block "js" . }}

  {{ end }}
  </body>

</html>
{{ end }}